/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/Admin/User/": {
    get: operations["Admin_User_list"];
    post: operations["Admin_User_create"];
  };
  "/api/Admin/User/{id}/": {
    get: operations["Admin_User_retrieve"];
    put: operations["Admin_User_update"];
    delete: operations["Admin_User_destroy"];
    patch: operations["Admin_User_partial_update"];
  };
  "/api/Application/": {
    get: operations["Application_list"];
  };
  "/api/Application/{id}/": {
    get: operations["Application_retrieve"];
  };
  "/api/Application/{id}/app_create/": {
    post: operations["Application_app_create_create"];
  };
  "/api/Application/{id}/app_delete/": {
    get: operations["Application_app_delete_retrieve"];
  };
  "/api/Application/{id}/app_start/": {
    get: operations["Application_app_start_retrieve"];
  };
  "/api/Application/{id}/app_stop/": {
    get: operations["Application_app_stop_retrieve"];
  };
  "/api/Application/list_application/": {
    get: operations["Application_list_application_retrieve"];
  };
  "/api/DataBase/": {
    get: operations["DataBase_list"];
    post: operations["DataBase_create"];
  };
  "/api/DataBase/{id}/": {
    get: operations["DataBase_retrieve"];
    put: operations["DataBase_update"];
    delete: operations["DataBase_destroy"];
    patch: operations["DataBase_partial_update"];
  };
  "/api/DataBase/{id}/create_instance/": {
    post: operations["DataBase_create_instance_create"];
  };
  "/api/DataBase/{id}/export_backup/": {
    post: operations["DataBase_export_backup_create"];
  };
  "/api/DataBase/{id}/import_backup/": {
    post: operations["DataBase_import_backup_create"];
  };
  "/api/DataBase/query_database_run_status/": {
    get: operations["DataBase_query_database_run_status_retrieve"];
  };
  "/api/DataBase/restart_database_instance/": {
    get: operations["DataBase_restart_database_instance_retrieve"];
  };
  "/api/DataBase/start_database_instance/": {
    get: operations["DataBase_start_database_instance_retrieve"];
  };
  "/api/DataBase/stop_database_instance/": {
    get: operations["DataBase_stop_database_instance_retrieve"];
  };
  "/api/FileBrowser/": {
    get: operations["FileBrowser_list"];
  };
  "/api/FileBrowser/cmd/": {
    post: operations["FileBrowser_cmd_create"];
  };
  "/api/FileBrowser/download_file/": {
    get: operations["FileBrowser_download_file_retrieve"];
  };
  "/api/FileBrowser/file_text_operating/": {
    get: operations["FileBrowser_file_text_operating_retrieve"];
    post: operations["FileBrowser_file_text_operating_create"];
  };
  "/api/FileBrowser/get_users/": {
    get: operations["FileBrowser_get_users_retrieve"];
  };
  "/api/FileBrowser/query/": {
    get: operations["FileBrowser_query_list"];
  };
  "/api/FileBrowser/request_download_file/": {
    get: operations["FileBrowser_request_download_file_retrieve"];
  };
  "/api/FileBrowser/upload_file/": {
    post: operations["FileBrowser_upload_file_create"];
  };
  "/api/FtpServer/": {
    get: operations["FtpServer_list"];
    post: operations["FtpServer_create"];
  };
  "/api/FtpServer/{id}/": {
    get: operations["FtpServer_retrieve"];
    put: operations["FtpServer_update"];
    delete: operations["FtpServer_destroy"];
    patch: operations["FtpServer_partial_update"];
  };
  "/api/FtpServer/install/": {
    post: operations["FtpServer_install_create"];
  };
  "/api/FtpServer/ping/": {
    get: operations["FtpServer_ping_retrieve"];
  };
  "/api/FtpServer/reload_service/": {
    post: operations["FtpServer_reload_service_create"];
  };
  "/api/FtpServer/start_service/": {
    post: operations["FtpServer_start_service_create"];
  };
  "/api/FtpServer/stop_service/": {
    post: operations["FtpServer_stop_service_create"];
  };
  "/api/FtpServer/sync_account/": {
    post: operations["FtpServer_sync_account_create"];
  };
  "/api/KVStorage/": {
    get: operations["KVStorage_list"];
    post: operations["KVStorage_create"];
  };
  "/api/KVStorage/{key}/": {
    get: operations["KVStorage_retrieve"];
    put: operations["KVStorage_update"];
    delete: operations["KVStorage_destroy"];
    patch: operations["KVStorage_partial_update"];
  };
  "/api/OperatingRes/query/": {
    /** query time consuming operations. */
    post: operations["OperatingRes_query_create"];
  };
  "/api/Terminal/": {
    get: operations["Terminal_list"];
  };
  "/api/Terminal/{id}/": {
    get: operations["Terminal_retrieve"];
  };
  "/api/Terminal/upload_file/": {
    post: operations["Terminal_upload_file_create"];
  };
  "/api/User/": {
    get: operations["User_list"];
  };
  "/api/User/{id}/": {
    get: operations["User_retrieve"];
  };
  "/api/User/forget_password/": {
    post: operations["User_forget_password_create"];
  };
  "/api/User/login/": {
    /** 登录接口，email 与 username 至少传一项 */
    post: operations["User_login_create"];
  };
  "/api/User/register/": {
    post: operations["User_register_create"];
  };
  "/api/User/status/": {
    get: operations["User_status_retrieve"];
  };
  "/api/User/update_password/": {
    post: operations["User_update_password_create"];
  };
  "/api/WebDAV/": {
    get: operations["WebDAV_list"];
    post: operations["WebDAV_create"];
  };
  "/api/WebDAV/{id}/": {
    get: operations["WebDAV_retrieve"];
    put: operations["WebDAV_update"];
    delete: operations["WebDAV_destroy"];
    patch: operations["WebDAV_partial_update"];
  };
  "/api/WebDAV/install/": {
    post: operations["WebDAV_install_create"];
  };
  "/api/WebDAV/ping/": {
    get: operations["WebDAV_ping_retrieve"];
  };
  "/api/WebDAV/reload_service/": {
    post: operations["WebDAV_reload_service_create"];
  };
  "/api/WebDAV/start_service/": {
    post: operations["WebDAV_start_service_create"];
  };
  "/api/WebDAV/stop_service/": {
    post: operations["WebDAV_stop_service_create"];
  };
  "/api/WebDAV/sync_account/": {
    post: operations["WebDAV_sync_account_create"];
  };
  "/api/Website/": {
    get: operations["Website_list"];
    post: operations["Website_create"];
  };
  "/api/Website/{id}/": {
    get: operations["Website_retrieve"];
    put: operations["Website_update"];
    delete: operations["Website_destroy"];
    patch: operations["Website_partial_update"];
  };
  "/api/Website/{id}/disable_ssl/": {
    post: operations["Website_disable_ssl_create"];
  };
  "/api/Website/{id}/enable_ssl/": {
    post: operations["Website_enable_ssl_create"];
  };
  "/api/Website/{id}/get_ssl_info/": {
    get: operations["Website_get_ssl_info_retrieve"];
  };
  "/api/Website/{id}/update_domain/": {
    post: operations["Website_update_domain_create"];
  };
  "/api/Website/{id}/update_web_config/": {
    post: operations["Website_update_web_config_create"];
  };
  "/api/Website/domain_records/": {
    get: operations["Website_domain_records_retrieve"];
  };
  "/api/Website/verify_dns_records/": {
    get: operations["Website_verify_dns_records_retrieve"];
  };
  "/docs/schema/": {
    /**
     * OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     * - YAML: application/vnd.oai.openapi
     * - JSON: application/vnd.oai.openapi+json
     */
    get: operations["docs_schema_retrieve"];
  };
  "/version/": {
    get: operations["version_retrieve"];
  };
  "/version/upgrade_frontend": {
    post: operations["version_upgrade_frontend_create"];
  };
}

export interface components {
  schemas: {
    ActionFile: {
      current_directory: string;
      operation_command: string;
    };
    AdminUser: {
      id: number;
      /** 密码 */
      password: string;
      /**
       * 上次登录
       * Format: date-time
       */
      last_login?: string | null;
      /**
       * 超级用户状态
       * @description 指明该用户缺省拥有所有权限。
       */
      is_superuser?: boolean;
      /**
       * 用户名
       * @description 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
       */
      username: string;
      /** 名字 */
      first_name?: string;
      /** 姓氏 */
      last_name?: string;
      /**
       * 工作人员状态
       * @description 指明用户是否可以登录到这个管理站点。
       */
      is_staff?: boolean;
      /**
       * 有效
       * @description 指明用户是否被认为是活跃的。以反选代替删除帐号。
       */
      is_active?: boolean;
      /**
       * 加入日期
       * Format: date-time
       */
      date_joined?: string;
      /**
       * 电子邮件地址
       * Format: email
       */
      email?: string;
      /** Format: uri */
      avatar?: string | null;
      /**
       * 组
       * @description 该用户归属的组。一个用户将得到其归属的组的所有权限。
       */
      groups?: number[];
      /**
       * 用户权限
       * @description 这个用户的特定权限。
       */
      user_permissions?: number[];
    };
    Certbot: {
      /**
       * Format: email
       * @description defaults to current user.
       */
      email?: string | null;
      /** @default letsencrypt */
      provider?: string | null;
    };
    /** @enum {integer} */
    CreateStatusEnum: 0 | 1 | 2;
    CreateUser: {
      id: number;
      /**
       * 用户名
       * @description 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
       */
      username: string;
      /**
       * 电子邮件地址
       * Format: email
       */
      email?: string;
      /** 密码 */
      password: string;
    };
    DataBaseModel: {
      id: number;
      /** @description own username */
      own_username: string;
      create_status_text: string;
      database_type_text: string;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at: string;
      /**
       * Database name
       * @description Once created, modification is not allowed, otherwise unforeseen bugs will occur.
       */
      name: string;
      /** Database username */
      username: string;
      /** Database password */
      password: string;
      database_type?: components["schemas"]["DatabaseTypeEnum"];
      character?: string;
      collation?: string;
      authorized_ip?: string;
      /**
       * Status
       * @description create database instance status
       */
      create_status?: components["schemas"]["CreateStatusEnum"];
      user?: number;
      website?: number | null;
    };
    /** @enum {integer} */
    DatabaseTypeEnum: 0 | 1;
    File: {
      /** @description Absolute file path */
      path: string;
      /** @description Directory of file(s) */
      directory: string;
      /** @description Name portion of file path */
      filename: string;
      /** @description Filesystem inode number */
      inode: number;
      /** @description Owning user ID */
      uid: number;
      /** @description Owning group ID */
      gid: number;
      /** @description Permission bits */
      mode: string;
      /** @description Device ID (optional) */
      device: number;
      /** @description Size of file in bytes */
      size: number;
      /** @description block_size */
      block_size: number;
      /** @description Last access time */
      atime: number;
      /** @description Last modification time */
      mtime: number;
      /** @description Last status change time */
      ctime: number;
      /** @description (B)irth or (cr)eate time */
      btime: number;
      /** @description 1 if the path is a symlink, otherwise 0 */
      symlink: number;
      /** @description File status */
      type: string;
    };
    FtpServerModel: {
      id: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at: string;
      username: string;
      password: string;
      file_system?: string;
      params?: { [key: string]: unknown };
    };
    FtpServerPong: {
      /** @default false */
      installed?: boolean;
      /** @default false */
      run_status?: boolean;
    };
    KVStorage: {
      id: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at: string;
      key: string;
      value?: string | null;
    };
    OperatingRes: {
      event_id: string;
      /** @description int */
      result: components["schemas"]["ResultEnum"];
      msg: string;
      result_text: string;
    };
    PaginatedAdminUserList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["AdminUser"][];
    };
    PaginatedCreateUserList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["CreateUser"][];
    };
    PaginatedDataBaseModelList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["DataBaseModel"][];
    };
    PaginatedFtpServerModelList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["FtpServerModel"][];
    };
    PaginatedKVStorageList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["KVStorage"][];
    };
    PaginatedSFTPUploadList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["SFTPUpload"][];
    };
    PaginatedWebDAVModelList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["WebDAVModel"][];
    };
    PaginatedWebsiteModelList: {
      pagination?: {
        /**
         * @description 总共（最大）页数
         * @example 100
         */
        total_pages?: number;
        /**
         * @description 当前页数
         * @example 2
         */
        current_page?: number;
        /**
         * @description 总共记录数量
         * @example 500
         */
        total_record?: number;
        /**
         * Format: uri
         * @description 下一页
         * @example http://api.example.org/accounts/?page=3
         */
        next?: string | null;
        /**
         * Format: uri
         * @description 上一页
         * @example http://api.example.org/accounts/?page=1
         */
        previous?: string | null;
      };
      results?: components["schemas"]["WebsiteModel"][];
    };
    PatchedAdminUser: {
      id?: number;
      /** 密码 */
      password?: string;
      /**
       * 上次登录
       * Format: date-time
       */
      last_login?: string | null;
      /**
       * 超级用户状态
       * @description 指明该用户缺省拥有所有权限。
       */
      is_superuser?: boolean;
      /**
       * 用户名
       * @description 必填；长度为150个字符或以下；只能包含字母、数字、特殊字符“@”、“.”、“-”和“_”。
       */
      username?: string;
      /** 名字 */
      first_name?: string;
      /** 姓氏 */
      last_name?: string;
      /**
       * 工作人员状态
       * @description 指明用户是否可以登录到这个管理站点。
       */
      is_staff?: boolean;
      /**
       * 有效
       * @description 指明用户是否被认为是活跃的。以反选代替删除帐号。
       */
      is_active?: boolean;
      /**
       * 加入日期
       * Format: date-time
       */
      date_joined?: string;
      /**
       * 电子邮件地址
       * Format: email
       */
      email?: string;
      /** Format: uri */
      avatar?: string | null;
      /**
       * 组
       * @description 该用户归属的组。一个用户将得到其归属的组的所有权限。
       */
      groups?: number[];
      /**
       * 用户权限
       * @description 这个用户的特定权限。
       */
      user_permissions?: number[];
    };
    PatchedDataBaseModel: {
      id?: number;
      /** @description own username */
      own_username?: string;
      create_status_text?: string;
      database_type_text?: string;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at?: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at?: string;
      /**
       * Database name
       * @description Once created, modification is not allowed, otherwise unforeseen bugs will occur.
       */
      name?: string;
      /** Database username */
      username?: string;
      /** Database password */
      password?: string;
      database_type?: components["schemas"]["DatabaseTypeEnum"];
      character?: string;
      collation?: string;
      authorized_ip?: string;
      /**
       * Status
       * @description create database instance status
       */
      create_status?: components["schemas"]["CreateStatusEnum"];
      user?: number;
      website?: number | null;
    };
    PatchedFtpServerModel: {
      id?: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at?: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at?: string;
      username?: string;
      password?: string;
      file_system?: string;
      params?: { [key: string]: unknown };
    };
    PatchedKVStorage: {
      id?: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at?: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at?: string;
      key?: string;
      value?: string | null;
    };
    PatchedWebDAVModel: {
      id?: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at?: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at?: string;
      username?: string;
      password?: string;
      scope?: string;
    };
    PatchedWebsiteModel: {
      id?: number;
      ssl_config?: components["schemas"]["SSLConfig"];
      database_id?: string;
      database_name?: string;
      web_server_type_text?: string;
      status_text?: string;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at?: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at?: string;
      /** 名称 */
      name?: string;
      /** 域名 */
      domain?: string;
      /**
       * Additional domain name
       * @description use "," split domain name
       */
      extra_domain?: string | null;
      /** Enable SSL */
      ssl_enable?: boolean;
      /** 站点目录 */
      index_root?: string;
      /**
       * 状态
       * @description ['准备中', '有效', '暂停', '过期', '禁用', '错误']
       */
      status?: components["schemas"]["WebsiteModelStatusEnum"];
      status_info?: string | null;
      web_server_type?: components["schemas"]["WebServerTypeEnum"];
      application?: string;
      application_config?: { [key: string]: unknown };
      /** Valid configuration */
      valid_web_server_config?: string | null;
      /** 用户 */
      user?: number;
    };
    Path: {
      /** @description specify the path to save the certificate. */
      certificate?: string | null;
      /** @description specify the path to save the key. */
      key?: string | null;
    };
    QueryOperatingRes: {
      event_id: string;
    };
    Result: {
      /** @default ok */
      detail: string;
    };
    /** @enum {string} */
    ResultEnum:
      | "PENDING"
      | "SUCCESS"
      | "FAILURE"
      | "PROCESSING"
      | "NOT_SUPPORT";
    SFTPUpload: {
      id: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at: string;
      /** Ssh username */
      username: string;
      /** Remote host */
      hostname: string;
      /** File name */
      filename: string;
      /** Uploaded file path on the remote server */
      target_path: string;
      status?: components["schemas"]["Status1d2Enum"];
    };
    SSLConfig: {
      certbot?: components["schemas"]["Certbot"] | null;
      path?: components["schemas"]["Path"] | null;
      /** @default http-01 */
      method?: string;
    };
    /** @enum {integer} */
    Status1d2Enum: 0 | 1 | 2;
    TextOperating: {
      path: string;
      text: string;
    };
    UpdatePassword: {
      /** 旧密码 */
      o_password: string;
      /** 新密码 */
      n_password: string;
    };
    UploadFile: {
      /** Format: uri */
      file: string;
    };
    User: {
      uid: number;
      username: string;
    };
    UserLogin: {
      /**
       * 邮箱
       * Format: email
       * @description 邮箱与用户名必填一项
       */
      email?: string;
      /**
       * 用户名
       * @description 邮箱与用户名必填一项
       */
      username?: string;
      /** 密码 */
      password: string;
    };
    UserLoginRes: {
      token: string;
      /**
       * 邮箱
       * Format: email
       * @description 邮箱与用户名必填一项
       */
      email?: string;
      /**
       * 用户名
       * @description 邮箱与用户名必填一项
       */
      username?: string;
    };
    VersionInfo: {
      /** @default 0.0.4-alpha */
      backend_current_version: string;
      /** @default 0.0.4-alpha */
      require_frontend_minimum_version: string;
    };
    WebDAVModel: {
      id: number;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at: string;
      username: string;
      password: string;
      scope: string;
    };
    WebDAVPong: {
      /** @default false */
      installed?: boolean;
      /** @default false */
      run_status?: boolean;
    };
    /** @enum {integer} */
    WebServerTypeEnum: 1 | 2 | 3 | 4 | 5 | 6;
    WebsiteConfig: {
      web_server_config: string;
    };
    WebsiteDomainConfig: {
      domain: string;
      extra_domain: string | null;
    };
    WebsiteModel: {
      id: number;
      ssl_config?: components["schemas"]["SSLConfig"];
      database_id: string;
      database_name: string;
      web_server_type_text: string;
      status_text: string;
      /**
       * 创建日期
       * Format: date-time
       * @description 创建日期
       */
      create_at: string;
      /**
       * 最后修改
       * Format: date-time
       * @description 更新日期
       */
      update_at: string;
      /** 名称 */
      name: string;
      /** 域名 */
      domain: string;
      /**
       * Additional domain name
       * @description use "," split domain name
       */
      extra_domain?: string | null;
      /** Enable SSL */
      ssl_enable?: boolean;
      /** 站点目录 */
      index_root?: string;
      /**
       * 状态
       * @description ['准备中', '有效', '暂停', '过期', '禁用', '错误']
       */
      status?: components["schemas"]["WebsiteModelStatusEnum"];
      status_info?: string | null;
      web_server_type?: components["schemas"]["WebServerTypeEnum"];
      application: string;
      application_config?: { [key: string]: unknown };
      /** Valid configuration */
      valid_web_server_config?: string | null;
      /** 用户 */
      user?: number;
    };
    /** @enum {integer} */
    WebsiteModelStatusEnum: 0 | 1 | 2 | 3 | 4 | 5;
  };
}

export interface operations {
  Admin_User_list: {
    parameters: {
      query: {
        email?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
        username?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedAdminUserList"];
        };
      };
    };
  };
  Admin_User_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["AdminUser"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUser"];
        "application/x-www-form-urlencoded": components["schemas"]["AdminUser"];
        "multipart/form-data": components["schemas"]["AdminUser"];
      };
    };
  };
  Admin_User_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this 用户. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AdminUser"];
        };
      };
    };
  };
  Admin_User_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this 用户. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AdminUser"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminUser"];
        "application/x-www-form-urlencoded": components["schemas"]["AdminUser"];
        "multipart/form-data": components["schemas"]["AdminUser"];
      };
    };
  };
  Admin_User_destroy: {
    parameters: {
      path: {
        /** A unique integer value identifying this 用户. */
        id: number;
      };
    };
    responses: {
      /** No response body */
      204: never;
    };
  };
  Admin_User_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this 用户. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AdminUser"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchedAdminUser"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAdminUser"];
        "multipart/form-data": components["schemas"]["PatchedAdminUser"];
      };
    };
  };
  Application_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedWebsiteModelList"];
        };
      };
    };
  };
  Application_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
  };
  Application_app_create_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["OperatingRes"];
        "multipart/form-data": components["schemas"]["OperatingRes"];
      };
    };
  };
  Application_app_delete_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  Application_app_start_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  Application_app_stop_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  Application_list_application_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
  };
  DataBase_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedDataBaseModelList"];
        };
      };
    };
  };
  DataBase_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["DataBaseModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DataBaseModel"];
        "application/x-www-form-urlencoded": components["schemas"]["DataBaseModel"];
        "multipart/form-data": components["schemas"]["DataBaseModel"];
      };
    };
  };
  DataBase_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DataBaseModel"];
        };
      };
    };
  };
  DataBase_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DataBaseModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DataBaseModel"];
        "application/x-www-form-urlencoded": components["schemas"]["DataBaseModel"];
        "multipart/form-data": components["schemas"]["DataBaseModel"];
      };
    };
  };
  DataBase_destroy: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
    };
    responses: {
      /** No response body */
      204: never;
    };
  };
  DataBase_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["DataBaseModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchedDataBaseModel"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedDataBaseModel"];
        "multipart/form-data": components["schemas"]["PatchedDataBaseModel"];
      };
    };
  };
  DataBase_create_instance_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["OperatingRes"];
        "multipart/form-data": components["schemas"]["OperatingRes"];
      };
    };
  };
  DataBase_export_backup_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["OperatingRes"];
        "multipart/form-data": components["schemas"]["OperatingRes"];
      };
    };
  };
  DataBase_import_backup_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this DataBase. */
        id: number;
      };
      query: {
        str?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["OperatingRes"];
        "multipart/form-data": components["schemas"]["OperatingRes"];
      };
    };
  };
  DataBase_query_database_run_status_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  DataBase_restart_database_instance_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  DataBase_start_database_instance_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  DataBase_stop_database_instance_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  FileBrowser_list: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["File"][];
        };
      };
    };
  };
  FileBrowser_cmd_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActionFile"];
        "application/x-www-form-urlencoded": components["schemas"]["ActionFile"];
        "multipart/form-data": components["schemas"]["ActionFile"];
      };
    };
  };
  FileBrowser_download_file_retrieve: {
    parameters: {
      query: {
        /** absolute path */
        path?: string;
        /** Download authorization */
        token?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["File"];
        };
      };
    };
  };
  FileBrowser_file_text_operating_retrieve: {
    parameters: {
      query: {
        /** file absolute path. */
        abs_path?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TextOperating"];
        };
      };
    };
  };
  FileBrowser_file_text_operating_create: {
    parameters: {
      query: {
        /** file absolute path. */
        abs_path?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TextOperating"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TextOperating"];
        "application/x-www-form-urlencoded": components["schemas"]["TextOperating"];
        "multipart/form-data": components["schemas"]["TextOperating"];
      };
    };
  };
  FileBrowser_get_users_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  FileBrowser_query_list: {
    parameters: {
      query: {
        /** directory */
        directory?: string;
        /** absolute path */
        path?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["File"][];
        };
      };
    };
  };
  FileBrowser_request_download_file_retrieve: {
    parameters: {
      query: {
        /** absolute path */
        path?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["File"];
        };
      };
    };
  };
  FileBrowser_upload_file_create: {
    parameters: {
      query: {
        /** directory */
        directory?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UploadFile"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UploadFile"];
        "application/x-www-form-urlencoded": components["schemas"]["UploadFile"];
        "multipart/form-data": components["schemas"]["UploadFile"];
      };
    };
  };
  FtpServer_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedFtpServerModelList"];
        };
      };
    };
  };
  FtpServer_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["FtpServerModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FtpServerModel"];
        "application/x-www-form-urlencoded": components["schemas"]["FtpServerModel"];
        "multipart/form-data": components["schemas"]["FtpServerModel"];
      };
    };
  };
  FtpServer_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this ftp server model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerModel"];
        };
      };
    };
  };
  FtpServer_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this ftp server model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["FtpServerModel"];
        "application/x-www-form-urlencoded": components["schemas"]["FtpServerModel"];
        "multipart/form-data": components["schemas"]["FtpServerModel"];
      };
    };
  };
  FtpServer_destroy: {
    parameters: {
      path: {
        /** A unique integer value identifying this ftp server model. */
        id: number;
      };
    };
    responses: {
      /** No response body */
      204: never;
    };
  };
  FtpServer_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this ftp server model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchedFtpServerModel"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedFtpServerModel"];
        "multipart/form-data": components["schemas"]["PatchedFtpServerModel"];
      };
    };
  };
  FtpServer_install_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerPong"];
        };
      };
    };
  };
  FtpServer_ping_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerPong"];
        };
      };
    };
  };
  FtpServer_reload_service_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerPong"];
        };
      };
    };
  };
  FtpServer_start_service_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerPong"];
        };
      };
    };
  };
  FtpServer_stop_service_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerPong"];
        };
      };
    };
  };
  FtpServer_sync_account_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["FtpServerPong"];
        };
      };
    };
  };
  KVStorage_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedKVStorageList"];
        };
      };
    };
  };
  KVStorage_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["KVStorage"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KVStorage"];
        "application/x-www-form-urlencoded": components["schemas"]["KVStorage"];
        "multipart/form-data": components["schemas"]["KVStorage"];
      };
    };
  };
  KVStorage_retrieve: {
    parameters: {
      path: {
        key: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KVStorage"];
        };
      };
    };
  };
  KVStorage_update: {
    parameters: {
      path: {
        key: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KVStorage"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KVStorage"];
        "application/x-www-form-urlencoded": components["schemas"]["KVStorage"];
        "multipart/form-data": components["schemas"]["KVStorage"];
      };
    };
  };
  KVStorage_destroy: {
    parameters: {
      path: {
        key: string;
      };
    };
    responses: {
      /** No response body */
      204: never;
    };
  };
  KVStorage_partial_update: {
    parameters: {
      path: {
        key: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["KVStorage"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchedKVStorage"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedKVStorage"];
        "multipart/form-data": components["schemas"]["PatchedKVStorage"];
      };
    };
  };
  /** query time consuming operations. */
  OperatingRes_query_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QueryOperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["QueryOperatingRes"];
        "multipart/form-data": components["schemas"]["QueryOperatingRes"];
      };
    };
  };
  Terminal_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedSFTPUploadList"];
        };
      };
    };
  };
  Terminal_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this sftp upload model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["SFTPUpload"];
        };
      };
    };
  };
  Terminal_upload_file_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UploadFile"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UploadFile"];
        "application/x-www-form-urlencoded": components["schemas"]["UploadFile"];
        "multipart/form-data": components["schemas"]["UploadFile"];
      };
    };
  };
  User_list: {
    parameters: {
      query: {
        email?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
        username?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedCreateUserList"];
        };
      };
    };
  };
  User_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this 用户. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateUser"];
        };
      };
    };
  };
  User_forget_password_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateUser"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUser"];
        "application/x-www-form-urlencoded": components["schemas"]["CreateUser"];
        "multipart/form-data": components["schemas"]["CreateUser"];
      };
    };
  };
  /** 登录接口，email 与 username 至少传一项 */
  User_login_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["UserLoginRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLogin"];
        "application/x-www-form-urlencoded": components["schemas"]["UserLogin"];
        "multipart/form-data": components["schemas"]["UserLogin"];
      };
    };
  };
  User_register_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateUser"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUser"];
        "application/x-www-form-urlencoded": components["schemas"]["CreateUser"];
        "multipart/form-data": components["schemas"]["CreateUser"];
      };
    };
  };
  User_status_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["CreateUser"];
        };
      };
    };
  };
  User_update_password_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePassword"];
        "application/x-www-form-urlencoded": components["schemas"]["UpdatePassword"];
        "multipart/form-data": components["schemas"]["UpdatePassword"];
      };
    };
  };
  WebDAV_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedWebDAVModelList"];
        };
      };
    };
  };
  WebDAV_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["WebDAVModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebDAVModel"];
        "application/x-www-form-urlencoded": components["schemas"]["WebDAVModel"];
        "multipart/form-data": components["schemas"]["WebDAVModel"];
      };
    };
  };
  WebDAV_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this web dav model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVModel"];
        };
      };
    };
  };
  WebDAV_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this web dav model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebDAVModel"];
        "application/x-www-form-urlencoded": components["schemas"]["WebDAVModel"];
        "multipart/form-data": components["schemas"]["WebDAVModel"];
      };
    };
  };
  WebDAV_destroy: {
    parameters: {
      path: {
        /** A unique integer value identifying this web dav model. */
        id: number;
      };
    };
    responses: {
      /** No response body */
      204: never;
    };
  };
  WebDAV_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this web dav model. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchedWebDAVModel"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedWebDAVModel"];
        "multipart/form-data": components["schemas"]["PatchedWebDAVModel"];
      };
    };
  };
  WebDAV_install_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVPong"];
        };
      };
    };
  };
  WebDAV_ping_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVPong"];
        };
      };
    };
  };
  WebDAV_reload_service_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVPong"];
        };
      };
    };
  };
  WebDAV_start_service_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVPong"];
        };
      };
    };
  };
  WebDAV_stop_service_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVPong"];
        };
      };
    };
  };
  WebDAV_sync_account_create: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebDAVPong"];
        };
      };
    };
  };
  Website_list: {
    parameters: {
      query: {
        /** Which field to use when ordering the results. */
        ordering?: string;
        /** A page number within the paginated result set. */
        page?: number;
        /** Number of results to return per page. */
        page_size?: number;
        /** A search term. */
        search?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PaginatedWebsiteModelList"];
        };
      };
    };
  };
  Website_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebsiteModel"];
        "application/x-www-form-urlencoded": components["schemas"]["WebsiteModel"];
        "multipart/form-data": components["schemas"]["WebsiteModel"];
      };
    };
  };
  Website_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
  };
  Website_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebsiteModel"];
        "application/x-www-form-urlencoded": components["schemas"]["WebsiteModel"];
        "multipart/form-data": components["schemas"]["WebsiteModel"];
      };
    };
  };
  Website_destroy: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      /** No response body */
      204: never;
    };
  };
  Website_partial_update: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PatchedWebsiteModel"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedWebsiteModel"];
        "multipart/form-data": components["schemas"]["PatchedWebsiteModel"];
      };
    };
  };
  Website_disable_ssl_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["OperatingRes"];
        "multipart/form-data": components["schemas"]["OperatingRes"];
      };
    };
  };
  Website_enable_ssl_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OperatingRes"];
        "application/x-www-form-urlencoded": components["schemas"]["OperatingRes"];
        "multipart/form-data": components["schemas"]["OperatingRes"];
      };
    };
  };
  Website_get_ssl_info_retrieve: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteModel"];
        };
      };
    };
  };
  Website_update_domain_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteDomainConfig"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebsiteDomainConfig"];
        "application/x-www-form-urlencoded": components["schemas"]["WebsiteDomainConfig"];
        "multipart/form-data": components["schemas"]["WebsiteDomainConfig"];
      };
    };
  };
  Website_update_web_config_create: {
    parameters: {
      path: {
        /** A unique integer value identifying this website. */
        id: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["WebsiteConfig"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebsiteConfig"];
        "application/x-www-form-urlencoded": components["schemas"]["WebsiteConfig"];
        "multipart/form-data": components["schemas"]["WebsiteConfig"];
      };
    };
  };
  Website_domain_records_retrieve: {
    parameters: {
      query: {
        domain?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  Website_verify_dns_records_retrieve: {
    parameters: {
      query: {
        domain?: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["OperatingRes"];
        };
      };
    };
  };
  /**
   * OpenApi3 schema for this API. Format can be selected via content negotiation.
   *
   * - YAML: application/vnd.oai.openapi
   * - JSON: application/vnd.oai.openapi+json
   */
  docs_schema_retrieve: {
    parameters: {
      query: {
        format?: "json" | "yaml";
        lang?:
          | "af"
          | "ar"
          | "ar-dz"
          | "ast"
          | "az"
          | "be"
          | "bg"
          | "bn"
          | "br"
          | "bs"
          | "ca"
          | "cs"
          | "cy"
          | "da"
          | "de"
          | "dsb"
          | "el"
          | "en"
          | "en-au"
          | "en-gb"
          | "eo"
          | "es"
          | "es-ar"
          | "es-co"
          | "es-mx"
          | "es-ni"
          | "es-ve"
          | "et"
          | "eu"
          | "fa"
          | "fi"
          | "fr"
          | "fy"
          | "ga"
          | "gd"
          | "gl"
          | "he"
          | "hi"
          | "hr"
          | "hsb"
          | "hu"
          | "hy"
          | "ia"
          | "id"
          | "ig"
          | "io"
          | "is"
          | "it"
          | "ja"
          | "ka"
          | "kab"
          | "kk"
          | "km"
          | "kn"
          | "ko"
          | "ky"
          | "lb"
          | "lt"
          | "lv"
          | "mk"
          | "ml"
          | "mn"
          | "mr"
          | "ms"
          | "my"
          | "nb"
          | "ne"
          | "nl"
          | "nn"
          | "os"
          | "pa"
          | "pl"
          | "pt"
          | "pt-br"
          | "ro"
          | "ru"
          | "sk"
          | "sl"
          | "sq"
          | "sr"
          | "sr-latn"
          | "sv"
          | "sw"
          | "ta"
          | "te"
          | "tg"
          | "th"
          | "tk"
          | "tr"
          | "tt"
          | "udm"
          | "uk"
          | "ur"
          | "uz"
          | "vi"
          | "zh-hans"
          | "zh-hant";
      };
    };
    responses: {
      200: {
        content: {
          "application/vnd.oai.openapi": { [key: string]: unknown };
          "application/yaml": { [key: string]: unknown };
          "application/vnd.oai.openapi+json": { [key: string]: unknown };
          "application/json": { [key: string]: unknown };
        };
      };
    };
  };
  version_retrieve: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["VersionInfo"];
        };
      };
    };
  };
  version_upgrade_frontend_create: {
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Result"];
        };
      };
    };
  };
}

export interface external {}
